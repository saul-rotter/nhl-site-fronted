{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","_this","Object","_Users_saulrotter_Documents_git_projects_trumedia_proj_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_saulrotter_Documents_git_projects_trumedia_proj_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_saulrotter_Documents_git_projects_trumedia_proj_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","squares","Array","fill","xIsNext","winner","i","_this2","handleClick","_this3","resetGame","process","setState","slice","calculateWinner","status","renderSquare","renderResetButton","React","Component","Game","lines","length","_lines$i","_Users_saulrotter_Documents_git_projects_trumedia_proj_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2dcbcb7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n  \n  class Board extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        squares: Array(9).fill(null),\n        xIsNext: true,\n        winner: null,\n      }\n    }\n\n    renderSquare(i) {\n      return <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)}/>;\n    }\n    \n    renderResetButton() {\n      if (!this.state.winner) {\n        return;\n      }\n      return (\n        <button onClick={() => this.resetGame()}>\n          {process.env.REACT_APP_NOT_SECRET_CODE}\n        </button>\n      );\n    }\n\n    resetGame() {\n      this.setState({\n        squares: Array(9).fill(null),\n        xIsNext: true,\n        winner: null,\n      });\n    }\n\n    handleClick(i) {\n      if (this.state.winner || this.state.squares[i]) {\n        return;\n      }\n      const squares = this.state.squares.slice();\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext,\n        winner: calculateWinner(squares),\n      });\n    }\n  \n    render() {\n      let status;\n      if (this.state.winner) {\n        status = 'Winner: ' + this.state.winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)} \n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n          <div >{this.renderResetButton()}</div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\"> \n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}