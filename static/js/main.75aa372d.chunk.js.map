{"version":3,"sources":["features/api/apiSlice.js","features/playerGames/playerGamesSlice.js","features/players/playerCard.js","features/players/playerGraph.js","features/playerGames/GameTable.js","features/players/playerCharts.js","features/players/columns.js","features/players/playerPage.js","features/players/playersLinks.js","features/players/playersSlice.js","components/Navbar.js","App.js","app/configStore.js","index.js"],"names":["apiSlice","createApi","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getAPIToken","query","url","headers","apiKey","process","content-type","refetchOnMountOrArgChange","useGetAPITokenQuery","useGetPlayerGamesQuery","injectEndpoints","getPlayerGames","_ref","token","playerId","concat","tempToken","transformResponse","response","new_response","TotYds","TotTDs","TotCmp","TotAtt","TotInt","map","game","toFixed","length","PlayerCard","player","react_default","a","createElement","Card","style","width","Img","variant","src","playerImage","Body","Title","fullName","Subtitle","teamImage","team","ListGroup","Item","YdsPerGame","TotCmpPer","Button","PlayerGraph","playerGames","ResponsiveContainer","height","LineChart","data","margin","top","bottom","left","right","CartesianGrid","strokeDasharray","XAxis","dataKey","label","YAxis","Tooltip","labelFormatter","Legend","Line","type","stroke","activeDot","r","GameTable","columns","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","Table","Object","assign","responsive","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","PlayerCharts","_useState","useState","_useState2","slicedToArray","isTable","setTable","handleClick","showTable","Col","onClick","Header","accessor","disableFilters","sticky","Cell","value","format","Date","playerGraph","PlayerPage","useParams","content","_useGetPlayerGamesQue","games","isSuccess","Row","xs","className","playerCard","playerCharts","PlayerLink","react_router_dom","to","data-tip","alt","react_router","useGetPlayersQuery","getPlayers","PlayerNavigation","_useGetPlayersQuery","_useGetPlayersQuery$d","players","Nav","padding","key","Navbar","collapseOnSelect","bg","Brand","href","paddingRight","Collapse","id","App","_useGetAPITokenQuery","fetchAPIToken","playerList","playerPage","components_Navbar","players_playerPage","Container","fluid","exact","path","element","configureStore","reducer","defineProperty","reducerPath","middleware","getDefaultMiddleware","ReactDOM","StrictMode","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.75aa372d.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const apiSlice = createApi({\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://project.trumedianetworks.com/api/' }),\n  endpoints: builder => ({\n    getAPIToken: builder.query({\n      query: () => ({\n        url: 'token',\n        headers: {\n          \"apiKey\": process.env.REACT_APP_TRUMEDIA_API_KEY,\n          \"content-type\":'application/json'\n        }\n      }),\n      refetchOnMountOrArgChange: 86340, // 23 hours and 59 minutes\n    })\n  })\n})\n\n\nexport const { useGetAPITokenQuery } = apiSlice\n\nexport function fetchAPIToken() {\n  const {\n    data,\n    isSuccess,\n  } = useGetAPITokenQuery();\n\n  if (isSuccess) {\n    return data['token'];\n  }\n  return null;\n}","import { apiSlice } from \"../api/apiSlice\";\n\nconst extendedApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getPlayerGames: builder.query({\n      query: ({ token, playerId }) => ({\n        url: `nfl/player/${playerId}`,\n        headers: {\n          \"content-type\": \"application/json\",\n          tempToken: token,\n        },\n      }),\n      transformResponse: (response) => {\n        let new_response = response;\n        let TotYds = 0;\n        let TotTDs = 0;\n        let TotCmp = 0;\n        let TotAtt = 0;\n        let TotInt = 0;\n        new_response = new_response.map((game) => {\n          game[\"Yd/Att\"] = (game[\"PsYds\"] / game[\"Att\"]).toFixed(3);\n          game[\"Cmp%\"] = (game[\"Cmp\"] / game[\"Att\"]).toFixed(3);\n          TotTDs += game[\"PsTD\"];\n          TotYds += game[\"PsYds\"];\n          TotCmp += game[\"Cmp\"];\n          TotAtt += game[\"Att\"];\n          TotInt += game[\"Int\"];\n          return game;\n        });\n        new_response[\"YdsPerGame\"] = (TotYds / new_response.length).toFixed(3);\n        new_response[\"TotTDs\"] = TotTDs;\n        new_response[\"TotCmpPer\"] = (TotCmp / TotAtt).toFixed(3);\n        new_response[\"TotInt\"] = TotInt;\n        return new_response;\n      },\n    }),\n  }),\n});\n\nexport const { useGetPlayerGamesQuery } = extendedApiSlice;\n","import React from \"react\";\nimport { Card, Button, ListGroup } from \"react-bootstrap\";\n\nfunction PlayerCard({ player }) {\n  return (\n    <Card style={{ width: \"18rem\" }}>\n      <Card.Img variant=\"top\" src={player[0].playerImage} />\n      <Card.Body>\n        <Card.Title>{player[0].fullName}</Card.Title>\n        <Card.Subtitle>\n          <Card.Img src={player[0].teamImage} style={{ width: \"9%\" }} />\n          {player[0].team}\n        </Card.Subtitle>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>Yards Per Game: {player.YdsPerGame}</ListGroup.Item>\n          <ListGroup.Item>Total TDs: {player.TotTDs}</ListGroup.Item>\n          <ListGroup.Item>\n            Season Completion %: {player.TotCmpPer}\n          </ListGroup.Item>\n          <ListGroup.Item>Total Ints: {player.TotInt}</ListGroup.Item>\n        </ListGroup>\n        <Button variant=\"primary\">Compare QBs </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default PlayerCard;","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nfunction PlayerGraph({ playerGames }) {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"70%\">\n      <LineChart\n        width={500}\n        height={500}\n        data={playerGames}\n        margin={{\n          top: 5,\n          bottom: 5,\n          left: 5,\n          right: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"week\" label=\"Week\" height={60} />\n        <YAxis />\n        <Tooltip labelFormatter={(label) => `Week ${label}`} />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"Cmp%\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n        />\n        <Line type=\"monotone\" dataKey=\"Yd/Att\" stroke=\"#82ca9d\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default PlayerGraph;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\nimport { Table } from \"react-bootstrap\";\n\nexport default function GameTable({ columns, data }) {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns,\n      data,\n    });\n\n  /* \n    Render the UI for your table\n    - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\n  */\n  return (\n    <Table responsive=\"xl\" {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport PlayerGraph from \"./playerGraph\";\nimport { Button } from \"react-bootstrap\";\nimport GameTable from \"../playerGames/GameTable\";\nimport prepareColumns from \"./columns\";\n\nfunction PlayerCharts({ playerGames }) {\n  const [isTable, setTable] = useState(true);\n\n  const handleClick = (showTable) => setTable(showTable);\n  return (\n    <Col>\n      <h2>Games</h2>\n      <Button\n        variant={isTable ? \"primary\" : \"secondary\"}\n        onClick={() => handleClick(true)}\n      >\n        Table{\" \"}\n      </Button>\n      <Button\n        variant={!isTable ? \"primary\" : \"secondary\"}\n        onClick={() => handleClick(false)}\n      >\n        Graph{\" \"}\n      </Button>\n      {isTable ? (\n        <GameTable columns={prepareColumns()} data={playerGames} />\n      ) : (\n        <PlayerGraph playerGames={playerGames} />\n      )}\n    </Col>\n  );\n}\n\nexport default PlayerCharts;\n","import { format } from \"date-fns\";\n\nexport default function prepareColumns() {\n  const columns = [\n    {\n      Header: \"Week\",\n      accessor: \"week\",\n      disableFilters: true,\n      sticky: \"left\",\n    },\n    {\n      Header: \"Game Date\",\n      accessor: \"gameDate\",\n      sticky: \"left\",\n      Cell: ({ value }) => {\n        return format(new Date(value), \"MM/dd/yyyy\");\n      },\n    },\n    { Header: \"Opponent\", accessor: \"opponent\", sticky: \"left\" },\n    { Header: \"Attempts\", accessor: \"Att\" },\n    { Header: \"Completions\", accessor: \"Cmp\" },\n    { Header: \"Interceptions\", accessor: \"Int\" },\n    { Header: \"Passing Touchdowns\", accessor: \"PsTD\" },\n    { Header: \"Passing Yards\", accessor: \"PsYds\" },\n    { Header: \"Sacks\", accessor: \"Sack\" },\n    { Header: \"Rushes\", accessor: \"Rush\" },\n    { Header: \"Rushing Yards\", accessor: \"RshYds\" },\n    { Header: \"Rushing Touchdowns\", accessor: \"RshTD\" },\n    { Header: \"Yds/Att\", accessor: \"Yd/Att\" },\n    { Header: \"Cmp%\", accessor: \"Cmp%\" },\n  ];\n  return columns;\n}\n","import React from \"react\";\nimport { useGetPlayerGamesQuery } from \"../playerGames/playerGamesSlice\";\nimport { useParams } from \"react-router-dom\";\nimport PlayerCard from \"./playerCard\";\nimport { Col, Row } from \"react-bootstrap\";\nimport PlayerCharts from \"./playerCharts\";\n\nfunction PlayerPage({ token }) {\n  const { playerId } = useParams();\n  let content = <div></div>;\n  if (token) {\n    const { data: games, isSuccess } = useGetPlayerGamesQuery({\n      token,\n      playerId,\n    });\n    if (isSuccess) {\n      content = (\n        <Row xs={2} className=\"justify-content-space-evenly\">\n          <Col>\n            <PlayerCard player={games} />\n          </Col>\n          <PlayerCharts playerGames={games} />\n        </Row>\n      );\n    }\n  }\n\n  return content;\n}\n\nexport default PlayerPage;\n","import React from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nexport function PlayerLink({ player }) {\n  return (\n    <div>\n      <Link to={`/players/${player.playerId}`}>\n        <img\n          data-tip=\"Select player to view statistics\"\n          src={player.playerImage}\n          alt={player.fullName}\n          className=\"img-thumbnail\"\n        />\n        <br />\n        <div>{player.fullName}</div>\n      </Link>\n      <Outlet />\n    </div>\n  );\n}\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const extendedApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getPlayers: builder.query({\n      query: (token) => ({\n        url: \"nfl/players\",\n        headers: {\n          \"content-type\": \"application/json\",\n          tempToken: token,\n        },\n      }),\n    }),\n  }),\n});\n\nexport const { useGetPlayersQuery } = extendedApiSlice;\n","import React from 'react';\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { PlayerLink } from \"../features/players/playersLinks\";\nimport { useGetPlayersQuery } from '../features/players/playersSlice';\n\n\nfunction PlayerNavigation({ token }) {\n  const { data: players = [], isSuccess } = useGetPlayersQuery(token);\n  let content = null;\n\n  if (isSuccess) {\n    content = players.map((player) => (\n      <Nav.Item style={{ padding: 5 }} key={player.playerId}>\n        <PlayerLink player={player} />\n      </Nav.Item>\n    ));\n  }\n  return (\n    <Navbar\n      collapseOnSelect\n      bg=\"dark\"\n      variant=\"dark\"\n      style={{ height: \"min-content\", width: \"max-content\" }}\n    >\n      <Navbar.Brand href=\"/react_app\" style={{ width: \"20%\", paddingRight: 5 }}>\n        <img\n          src={\"/react_app/trumedialogo.png\"}\n          alt={\"Logo\"}\n          className=\"img-thumbnail\"\n        />\n      </Navbar.Brand>\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav style={{ width: \"25%\", paddingRight: 10 }}>{content}</Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default PlayerNavigation;\n","import React from 'react'\nimport './index.css';\nimport { Route, Routes } from 'react-router-dom'\nimport PlayerPage from \"./features/players/playerPage\";\nimport PlayerNavigation from './components/Navbar';\nimport { fetchAPIToken } from './features/api/apiSlice'\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  const token = fetchAPIToken();\n\n  let playerList = <div></div>;\n  let playerPage = <div></div>;\n  if (token) {\n    playerList = <div><PlayerNavigation token={token}/></div>\n    playerPage = <PlayerPage token={token} />;\n  }\n  return (\n      <div className=\"App\">\n        <Container fluid>\n        {playerList}\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <h1>Welcome to the homepage, choose a player from above</h1>\n            }\n          />\n          <Route exact path=\"/players/:playerId\" element={playerPage} />\n        </Routes>\n        </Container>\n      </div>\n  )\n}\n\nexport default App","import { configureStore } from '@reduxjs/toolkit'\nimport { apiSlice } from '../features/api/apiSlice'\nexport const API_KEY = process.env.REACT_APP_TRUMEDIA_API_KEY\nexport default configureStore({\n  reducer: {\n    [apiSlice.reducerPath]: apiSlice.reducer\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware().concat(apiSlice.middleware)\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport {\n  BrowserRouter\n} from 'react-router-dom'\nimport store from './app/configStore'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}